/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mybank.gui;

import com.mybank.domain.Account;
import com.mybank.domain.Bank;
import com.mybank.domain.CheckingAccount;
import com.mybank.domain.Customer;
import com.mybank.domain.SavingsAccount;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

/**
 *
 * @author Trap
 */
public class MatisseProg extends javax.swing.JFrame {

    /**
     * Creates new form MatisseProg
     */
    public MatisseProg() {
        initComponents();
        loadCustomers("data\\test.dat");
        for (int i = 0; i < Bank.getNumberOfCustomers(); i++) {
            selectCustomer.addItem(Bank.getCustomer(i).getLastName() + ", " + Bank.getCustomer(i).getFirstName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutMessage = new javax.swing.JOptionPane();
        selectCustomer = new java.awt.Choice();
        showButton = new javax.swing.JButton();
        reportButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        customerInfo = new java.awt.TextArea();

        aboutMessage.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyBank clients");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(441, 311));
        setMinimumSize(new java.awt.Dimension(441, 311));
        setName("MainFrame"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(441, 311));

        selectCustomer.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        selectCustomer.setName("choiseCustomer"); // NOI18N

        showButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showButton.setText("Show");
        showButton.setName("showButton"); // NOI18N
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        reportButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        reportButton.setText("Report");
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });

        aboutButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("     Choose a client name and press \"Show\" button");
        jLabel1.setToolTipText("");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        customerInfo.setEditable(false);
        customerInfo.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        customerInfo.setMaximumSize(new java.awt.Dimension(280, 280));
        customerInfo.setMinimumSize(new java.awt.Dimension(280, 280));
        customerInfo.setPreferredSize(new java.awt.Dimension(280, 280));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showButton)
                    .addComponent(selectCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reportButton)
                        .addGap(18, 18, 18)
                        .addComponent(aboutButton))
                    .addComponent(customerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadCustomers(String fileName) {
        try (BufferedReader reader = Files.newBufferedReader(Paths.get(fileName))) {
            int numberOfCustomers = Integer.parseInt(reader.readLine());
            for (int i = 0; i < numberOfCustomers; i++) {
                reader.readLine();
                String[] customersInfo = reader.readLine().split("\t");
                Bank.addCustomer(customersInfo[0], customersInfo[1]);
                int numberOfCustomersAccounts = Integer.parseInt(customersInfo[2]);
                Customer customer = Bank.getCustomer(i);
                for (int j = 0; j < numberOfCustomersAccounts; j++) {
                    String[] accountInfo = reader.readLine().split("\t");
                    String accountType = accountInfo[0];
                    double balance = Double.parseDouble(accountInfo[1]);
                    switch (accountType) {
                        case "S":
                            double interestRate = Double.parseDouble(accountInfo[2]);
                            customer.addAccount(new SavingsAccount(balance, interestRate));
                            break;
                        case "C":
                            double overdraftAmount = Double.parseDouble(accountInfo[2]);
                            customer.addAccount(new CheckingAccount(balance, overdraftAmount));
                            break;
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        Customer current = Bank.getCustomer(selectCustomer.getSelectedIndex());
        String accType = current.getAccount(0) instanceof CheckingAccount ? "Checking" : "Savings";
        String custInfo = current.getLastName() + ", " + current.getFirstName() + "\n\nAcc Type: " + accType
                + "\nBalance: $" + current.getAccount(0).getBalance();
        if (current.getNumberOfAccounts() == 2) {
            accType = current.getAccount(1) instanceof CheckingAccount ? "Checking" : "Savings";
            custInfo += "\nAcc Type: " + accType
                    + "\nBalance: $" + current.getAccount(1).getBalance();
        }
        customerInfo.setText(custInfo);
    }//GEN-LAST:event_showButtonActionPerformed

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportButtonActionPerformed
        String title = "\n      CUSTOMERS REPORT\n";
        String customersList = "";
        for (int cust_idx = 0; cust_idx < Bank.getNumberOfCustomers(); cust_idx++) {
            Customer customer = Bank.getCustomer(cust_idx);
            String CustomerInfo;
            String customerFullName = "\nCustomer: " + customer.getLastName() + ", " + customer.getFirstName();
            for (int acct_idx = 0; acct_idx < customer.getNumberOfAccounts(); acct_idx++) {
                Account account = customer.getAccount(acct_idx);
                String account_type = "";
                if (account instanceof SavingsAccount) {
                    account_type = "Savings Account";
                } else if (account instanceof CheckingAccount) {
                    account_type = "Checking Account";
                } else {
                    account_type = "Unknown Account Type";
                }
                String typeAndBalance = "\n" + account_type + ":\ncurrent balance is $" + account.getBalance() + "";
                CustomerInfo = customerFullName + typeAndBalance;
                customersList += CustomerInfo + "\n";
            }
        }
        String reportText = title + customersList;
        customerInfo.setText(reportText);
    }//GEN-LAST:event_reportButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        aboutMessage.showMessageDialog(null,
                "<html><center><b><span style=\"font-size:1.5em;\">Ласкаво просимо до нашого банківського додатку!</b><br></center>"
                + "<br><span style=\"font-size:1.3em;\">Оберіть клієнта у випадаючому меню та натисніть кнопку \"Show\" для перегляду детальної інформації про вибраного клієнта у текстовому полі."
                + "<br><span style=\"font-size:1.3em;\">Натисніть кнопку \"Report\" для отримання списку всіх клієнтів банку та їх рахунків."
                + "<br><br><span style=\"font-size:1.3em;\">Додаток розроблено Яценко Віталієм, студентом 34 групи, за прототипом О.В.Бабича.</html>",
                "About", aboutMessage.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatisseProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatisseProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatisseProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatisseProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatisseProg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JOptionPane aboutMessage;
    private java.awt.TextArea customerInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton reportButton;
    private java.awt.Choice selectCustomer;
    private javax.swing.JButton showButton;
    // End of variables declaration//GEN-END:variables
}
